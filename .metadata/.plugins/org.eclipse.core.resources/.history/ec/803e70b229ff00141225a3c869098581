package mixed;

public class DynamicPro {

	/*A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?
	
       */
	
	public int uniquePaths(int m, int n) {
		return backtrack(0,0,m,n);
	}
	public int backtrack(int i, int j, int m, int n){
		if (i == m && j == n) return 1;
		if (i >m || j > n) return 0;
		return backtrack(i+1, j, m, n) + backtrack(i, j+1, m, n);
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
